---
// Theme toggle component with improved styling and animations
---

<button
	id="theme-toggle"
	class="absolute top-4 right-4 inline-flex h-10 w-20 items-center rounded-full bg-muted p-1 transition-colors duration-200 ease-in-out outline-none ring-2 ring-ring dark:focus:ring-offset-background"
	type="button"
	aria-label="Toggle theme"
	role="switch"
	aria-checked="false"
>
	<!-- Toggle handle -->
	<span
		id="theme-toggle-handle"
		class="inline-block h-8 w-8 transform rounded-full bg-background shadow-lg ring-0 transition-transform duration-200 ease-in-out z-10"
	></span>

	<!-- Sun icon -->
	<svg
		id="theme-toggle-light-icon"
		class="absolute left-1 h-6 w-6 text-muted-foreground transition-opacity duration-200"
		fill="currentColor"
		viewBox="0 0 20 20"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path
			d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
		></path>
	</svg>

	<!-- Moon icon -->
	<svg
		id="theme-toggle-dark-icon"
		class="absolute right-1 h-6 w-6 text-muted-foreground transition-opacity duration-200"
		fill="currentColor"
		viewBox="0 0 20 20"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
		></path>
	</svg>
</button>

<script>
	// Enhanced theme toggle functionality
	(function () {
		const themeToggleBtn = document.getElementById("theme-toggle");
		const themeToggleHandle = document.getElementById("theme-toggle-handle");
		const themeToggleLightIcon = document.getElementById(
			"theme-toggle-light-icon"
		);
		const themeToggleDarkIcon = document.getElementById(
			"theme-toggle-dark-icon"
		);

		// Function to update toggle state
		function updateToggleState(isDark: boolean) {
			if (isDark) {
				themeToggleHandle?.classList.add("translate-x-10");
				themeToggleLightIcon?.classList.add("opacity-100");
				themeToggleDarkIcon?.classList.add("opacity-0");
				themeToggleBtn?.setAttribute("aria-checked", "true");
			} else {
				themeToggleHandle?.classList.remove("translate-x-10");
				themeToggleLightIcon?.classList.remove("opacity-100");
				themeToggleDarkIcon?.classList.remove("opacity-0");
				themeToggleBtn?.setAttribute("aria-checked", "false");
			}
		}

		// Initialize toggle state
		if (
			localStorage.getItem("color-theme") === "dark" ||
			(!("color-theme" in localStorage) &&
				window.matchMedia("(prefers-color-scheme: dark)").matches)
		) {
			updateToggleState(true);
		} else {
			updateToggleState(false);
		}

		// Handle toggle click
		themeToggleBtn?.addEventListener("click", function () {
			const isDark = document.documentElement.classList.contains("dark");

			if (isDark) {
				document.documentElement.classList.remove("dark");
				localStorage.setItem("color-theme", "light");
				updateToggleState(false);
			} else {
				document.documentElement.classList.add("dark");
				localStorage.setItem("color-theme", "dark");
				updateToggleState(true);
			}
		});

		// Listen for system theme changes
		window
			.matchMedia("(prefers-color-scheme: dark)")
			.addEventListener("change", function (e) {
				if (!("color-theme" in localStorage)) {
					if (e.matches) {
						document.documentElement.classList.add("dark");
						updateToggleState(true);
					} else {
						document.documentElement.classList.remove("dark");
						updateToggleState(false);
					}
				}
			});
	})();
</script>
